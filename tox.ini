[tox]
envlist = py3{7,8,9,10,11}-{linux,macos,windows}
skip_missing_interpreters = true
isolated_build = true
skipsdist = true
min_version = 4.3.3

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311

[gh-actions:env]
PLATFORM =
    ubuntu-20.04: linux
    macos-latest: macos
    windows-latest: windows

[base]
deps =
    pip>=22.1
    build

[testenv]
skip_install = true
install_command = pip install {opts} {packages}

[testenv:{sync,do}]
envdir = {toxinidir}/.sync
# these 2 tox env cmds share the same env with the following plugin
# https://github.com/masenf/tox-ignore-env-name-mismatch
runner = ignore_env_name_mismatch

description =
    do: Run cmd following "--" from the sync env, e.g. "tox -e do -- repolite --show"
    sync: Install repolite and use it for cloning diagram workflow deps

passenv =
    pythonLocation
    PYTHON
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    XDG_*
    CI
    GITHUB*
    OS
    LANG
    LC_COLLATE
    SSH_*
    GID
    UID
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    # logging_tree
    {[base]deps}
    repolite @ https://github.com/sarnold/repolite/releases/download/0.6.2/repolite-0.6.2-py3-none-any.whl

commands =
    sync: repolite {posargs:--quiet}
    do: {posargs:python -c 'print("No cmd provided")'}

[testenv:{graph,gen}]
envdir = {toxinidir}/.graph
# these 2 tox env cmds share the same env with the following plugin
# https://github.com/masenf/tox-ignore-env-name-mismatch
runner = ignore_env_name_mismatch

description =
    # the graph cmd is only required to integrate new icons
    graph: Build new content for the diagrams package (run sync first to install the source)
    gen: Generate a new diagram from your python source file

passenv =
    pythonLocation
    PYTHON
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    XDG_*
    CI
    GITHUB*
    OS
    LANG
    LC_COLLATE
    SSH_*
    GID
    UID
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

setenv =
    gen: APPROOT = {env:APPROOT:{toxinidir}/resources}

allowlist_externals =
  bash

# external (non-python) pkg requirements for diagrams graph command
#  round
#  graphviz
#  inkscape
#  imagemagick/graphicsmagick
#  ttf-opensans fontconfig xdg-utils
# note only graphviz is required for the gen command
deps =
    -r requirements-dia.txt
    ext/diagrams

commands =
    graph: bash ./autogen.sh
    gen: python {env:APPROOT}/{posargs:acme_webservice.py}
    gen: bash -c 'mv *.png std/images'

[testenv:build]
skip_install = true

passenv =
    pythonLocation
    PYTHON
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    XDG_*
    CI
    GITHUB*
    OS
    LANG
    LC_COLLATE
    SSH_*
    GID
    UID
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

allowlist_externals =
    make

deps =
    pip>=22.1
    rst2pdf[svgsupport]

commands =
    make

[testenv:changes]
skip_install = true
always_copy = False

description =
    changes: Generate full or partial changelog; use git delta syntax for changes-since

allowlist_externals =
    bash

deps =
    pip>=20.0.1
    gitchangelog @ https://github.com/sarnold/gitchangelog/releases/download/3.2.0/gitchangelog-3.2.0-py3-none-any.whl

commands =
    bash -c 'gitchangelog {posargs} > CHANGELOG.rst'

[testenv:clean]
skip_install = true
allowlist_externals =
    bash

deps =
    pip>=21.1

commands =
    bash -c 'make clean'
    bash -c 'rm -rf build dist __pycache__/'
